OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2020-01-08T03:28:39.173552+01:00' ],		#prior : OmReference [ 'Pharo7.0.3-0-32bit-0903ade.7mjpbpkhuf138t2m6a82npg3r', '60977' ],		#self : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:30:52.039552+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #num,			#protocol : #'as yet unclassified',			#sourceCode : 'num\r^ #digit asParser plus flatten trim ==> [ :str | str asNumber ]',			#stamp : 'MarkusKaleta 1/8/2020 03:30',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:30:52.072552+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #num,			#protocol : #'as yet unclassified',			#sourceCode : 'num\r^ #digit asParser plus flatten trim ==> [ :str | str asNumber ]',			#stamp : 'MarkusKaleta 1/8/2020 03:30',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #num,			#protocol : #accessing,			#sourceCode : 'num\r^ #digit asParser plus flatten trim ==> [ :str | str asNumber ]',			#stamp : 'MarkusKaleta 1/8/2020 03:30',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:41:27.288552+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'term subt pro var brackets num\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #term,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #subt,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #pro,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #var,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #brackets,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #num,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:41:29.933552+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #brackets,			#protocol : #'as yet unclassified',			#sourceCode : 'brackets\r^ $( asParser, term, $)asParser trim',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:41:29.940552+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #brackets,			#protocol : #'as yet unclassified',			#sourceCode : 'brackets\r^ $( asParser, term, $)asParser trim',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #brackets,			#protocol : #accessing,			#sourceCode : 'brackets\r^ $( asParser, term, $)asParser trim',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:41:53.975552+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #term,			#protocol : #'as yet unclassified',			#sourceCode : 'term \r^ subt / pro',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:41:53.981552+01:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #term,			#protocol : #'as yet unclassified',			#sourceCode : 'term \r^ subt / pro',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #term,			#protocol : #accessing,			#sourceCode : 'term \r^ subt / pro',			#stamp : 'MarkusKaleta 1/8/2020 03:41',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:42:13.689552+01:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #subt,			#protocol : #'as yet unclassified',			#sourceCode : 'subt \r^ pro, $- asParser trim, term',			#stamp : 'MarkusKaleta 1/8/2020 03:42',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:42:13.694552+01:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #subt,			#protocol : #'as yet unclassified',			#sourceCode : 'subt \r^ pro, $- asParser trim, term',			#stamp : 'MarkusKaleta 1/8/2020 03:42',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #subt,			#protocol : #accessing,			#sourceCode : 'subt \r^ pro, $- asParser trim, term',			#stamp : 'MarkusKaleta 1/8/2020 03:42',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:43:12.752552+01:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #mul,			#protocol : #'as yet unclassified',			#sourceCode : 'mul \r^ var, $* asParser trim, pro',			#stamp : 'MarkusKaleta 1/8/2020 03:43',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:43:55.899552+01:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #var,			#protocol : #'as yet unclassified',			#sourceCode : 'var \r^ num / brackets',			#stamp : 'MarkusKaleta 1/8/2020 03:43',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:43:55.903552+01:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #var,			#protocol : #'as yet unclassified',			#sourceCode : 'var \r^ num / brackets',			#stamp : 'MarkusKaleta 1/8/2020 03:43',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #var,			#protocol : #accessing,			#sourceCode : 'var \r^ num / brackets',			#stamp : 'MarkusKaleta 1/8/2020 03:43',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:46:33.414552+01:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #start,			#protocol : #'as yet unclassified',			#sourceCode : 'start \r^ term end',			#stamp : 'MarkusKaleta 1/8/2020 03:46',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:46:33.418552+01:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #start,			#protocol : #'as yet unclassified',			#sourceCode : 'start \r^ term end',			#stamp : 'MarkusKaleta 1/8/2020 03:46',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #start,			#protocol : #accessing,			#sourceCode : 'start \r^ term end',			#stamp : 'MarkusKaleta 1/8/2020 03:46',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:49:04.041552+01:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'term subt pro var brackets num\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #term,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #subt,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #pro,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #var,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #brackets,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #num,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @7,				#content : 'test',				#stamp : 'MarkusKaleta 1/8/2020 03:49'			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'test',		#newStamp : 'MarkusKaleta 1/8/2020 03:49'	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:49:28.664552+01:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'term subt pro var brackets num\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #term,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #subt,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #pro,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #var,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #brackets,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #num,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @7,				#content : 'by Markus Kaleta\rLeacture: Concepts of Programming Language',				#stamp : 'MarkusKaleta 1/8/2020 03:49'			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'test',		#newComment : 'by Markus Kaleta\rLeacture: Concepts of Programming Language',		#oldStamp : 'MarkusKaleta 1/8/2020 03:49',		#newStamp : 'MarkusKaleta 1/8/2020 03:49'	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:52:52.928552+01:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'term subt pro var brackets num\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #term,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #subt,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #pro,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #var,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #brackets,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #num,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @7,				#content : 'by Markus Kaleta\rLeacture: Concepts of Programming Language',				#stamp : 'MarkusKaleta 1/8/2020 03:49'			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PPCompositeParser subclass: #CoPLGrammer\r\tinstanceVariableNames: \'term subt pro var brackets num mul\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PetitParser-Tools\'',				#superclassName : 'PPCompositeParser'			},			#name : #CoPLGrammer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #term,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #subt,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #pro,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #var,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #brackets,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #num,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CoPLGrammer,						#isMetaSide : false					},					#name : #mul,					#parent : @33				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CoPLGrammer class\r\tinstanceVariableNames: \'\''				},				#name : #'CoPLGrammer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CoPLGrammer,					#isMetaSide : false				},				#parent : @33,				#content : 'by Markus Kaleta\rLeacture: Concepts of Programming Language',				#stamp : 'MarkusKaleta 1/8/2020 03:49'			},			#classVariables : OrderedCollection [ ],			#category : #PetitParser-Tools,			#package : #PetitParser,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:52:55.255552+01:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #pro,			#protocol : #'as yet unclassified',			#sourceCode : 'pro \r^ var / mul',			#stamp : 'MarkusKaleta 1/8/2020 03:52',			#package : #PetitParser		}	}}OmEntry {	#tags : {		#author : 'MarkusKaleta',		#time : DateAndTime [ '2020-01-08T03:52:55.260552+01:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #pro,			#protocol : #'as yet unclassified',			#sourceCode : 'pro \r^ var / mul',			#stamp : 'MarkusKaleta 1/8/2020 03:52',			#package : #PetitParser		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CoPLGrammer,				#isMetaSide : false			},			#name : #pro,			#protocol : #accessing,			#sourceCode : 'pro \r^ var / mul',			#stamp : 'MarkusKaleta 1/8/2020 03:52',			#package : #PetitParser		}	}}